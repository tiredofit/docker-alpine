# Manual Workflow

name: 'Manual build'

on:
  workflow_dispatch:

jobs:
  alpine_3_3:
    env:
      RELEASE: "3.3"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: "3.3"
      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=${GITHUB_REPOSITORY/docker-/}
          if [[ $GITHUB_REF == refs/heads/* ]]; then
            BRANCH=${GITHUB_REF#refs/heads/}

            case ${BRANCH} in
              main | master | *-master )
                  if [ -n "${{ secrets.LATEST }}" ] ; then
                    if [ ${GITHUB_REF#refs/heads/} = "${{ secrets.LATEST }}" ]; then
                      BRANCHTAG="${DOCKER_IMAGE}:${RELEASE},${DOCKER_IMAGE}:${RELEASE}-latest,${DOCKER_IMAGE}:latest"
                    else
                      BRANCHTAG="${DOCKER_IMAGE}:${RELEASE},${DOCKER_IMAGE}:${RELEASE-latest}"
                    fi
                  else
                     BRANCHTAG="${DOCKER_IMAGE}:${RELEASE},${DOCKER_IMAGE}:${RELEASE}-latest"
                  fi
                ;;
              develop | *-develop )
                  BRANCHTAG="${DOCKER_IMAGE}:develop"
                ;;
              * )
                  if [ -n "${{ secrets.LATEST }}" ] ; then
                    if [ "${BRANCHTAG}" = "${{ secrets.LATEST }}" ]; then
                      BRANCHTAG="${DOCKER_IMAGE}:${BRANCH},${DOCKER_IMAGE}:${BRANCH}-latest,${DOCKER_IMAGE}:latest"
                    else
                      BRANCHTAG="${DOCKER_IMAGE}:${BRANCH},${DOCKER_IMAGE}:${BRANCH}-latest"
                    fi
                  else
                    BRANCHTAG="${DOCKER_IMAGE}:${BRANCH},${DOCKER_IMAGE}:${BRANCH}-latest"
                  fi
                ;;
            esac
          fi

          if [[ $GITHUB_REF == refs/tags/* ]]; then
            GITTAG="${DOCKER_IMAGE}:$(echo $GITHUB_REF | sed 's|refs/tags/||g')_${RELEASE}"
          fi

          if [ -n "${BRANCHTAG}" ] && [ -n "${GITTAG}" ]; then
            TAGS=${BRANCHTAG},${GITTAG}
          else
            TAGS="${BRANCHTAG}${GITTAG}"
          fi

          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=docker_image::${DOCKER_IMAGE}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Label
        id: Label
        run: |
          if [ -f "Dockerfile" ] ; then
            sed -i "/FROM .*/a LABEL base_git_repository=\"https://github.com/${GITHUB_REPOSITORY}\"" Dockerfile
            sed -i "/FROM .*/a LABEL base_git_commit=\"${GITHUB_SHA}\"" Dockerfile
            sed -i "/FROM .*/a LABEL base_git_committed_by=\"${GITHUB_ACTOR}\"" Dockerfile
            sed -i "/FROM .*/a LABEL base_image_build_date=\"$(date +'%Y-%m-%d %H:%M:%S')\"" Dockerfile
            if [ -f "CHANGELOG.md" ] ; then
              sed -i "/FROM .*/a LABEL base_git_changelog_version=\"$(head -n1 ./CHANGELOG.md | awk '{print $2}')\"" Dockerfile
            fi

            if [[ $GITHUB_REF == refs/tags/* ]]; then
              sed -i "/FROM .*/a LABEL base_git_tag=\"${GITHUB_REF#refs/tags/v}\"" Dockerfile
            fi

            if [[ $GITHUB_REF == refs/heads/* ]]; then
              sed -i "/FROM .*/a LABEL base_git_branch=\"${GITHUB_REF#refs/heads/}\"" Dockerfile
            fi
          fi

      - name: Switch
        id: Switch
        run: |
          sed -i "s|FROM alpine:.*|FROM alpine:${RELEASE}|g" Dockerfile

      - name: Build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ steps.prep.outputs.tags }}
  alpine_3_4:
    env:
      RELEASE: "3.4"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: "3.4"
      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=${GITHUB_REPOSITORY/docker-/}
          if [[ $GITHUB_REF == refs/heads/* ]]; then
            BRANCH=${GITHUB_REF#refs/heads/}

            case ${BRANCH} in
              main | master | *-master )
                  if [ -n "${{ secrets.LATEST }}" ] ; then
                    if [ ${GITHUB_REF#refs/heads/} = "${{ secrets.LATEST }}" ]; then
                      BRANCHTAG="${DOCKER_IMAGE}:${RELEASE},${DOCKER_IMAGE}:${RELEASE}-latest,${DOCKER_IMAGE}:latest"
                    else
                      BRANCHTAG="${DOCKER_IMAGE}:${RELEASE},${DOCKER_IMAGE}:${RELEASE-latest}"
                    fi
                  else
                     BRANCHTAG="${DOCKER_IMAGE}:${RELEASE},${DOCKER_IMAGE}:${RELEASE}-latest"
                  fi
                ;;
              develop | *-develop )
                  BRANCHTAG="${DOCKER_IMAGE}:develop"
                ;;
              * )
                  if [ -n "${{ secrets.LATEST }}" ] ; then
                    if [ "${BRANCHTAG}" = "${{ secrets.LATEST }}" ]; then
                      BRANCHTAG="${DOCKER_IMAGE}:${BRANCH},${DOCKER_IMAGE}:${BRANCH}-latest,${DOCKER_IMAGE}:latest"
                    else
                      BRANCHTAG="${DOCKER_IMAGE}:${BRANCH},${DOCKER_IMAGE}:${BRANCH}-latest"
                    fi
                  else
                    BRANCHTAG="${DOCKER_IMAGE}:${BRANCH},${DOCKER_IMAGE}:${BRANCH}-latest"
                  fi
                ;;
            esac
          fi

          if [[ $GITHUB_REF == refs/tags/* ]]; then
            GITTAG="${DOCKER_IMAGE}:$(echo $GITHUB_REF | sed 's|refs/tags/||g')_${RELEASE}"
          fi

          if [ -n "${BRANCHTAG}" ] && [ -n "${GITTAG}" ]; then
            TAGS=${BRANCHTAG},${GITTAG}
          else
            TAGS="${BRANCHTAG}${GITTAG}"
          fi

          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=docker_image::${DOCKER_IMAGE}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Label
        id: Label
        run: |
          if [ -f "Dockerfile" ] ; then
            sed -i "/FROM .*/a LABEL base_git_repository=\"https://github.com/${GITHUB_REPOSITORY}\"" Dockerfile
            sed -i "/FROM .*/a LABEL base_git_commit=\"${GITHUB_SHA}\"" Dockerfile
            sed -i "/FROM .*/a LABEL base_git_committed_by=\"${GITHUB_ACTOR}\"" Dockerfile
            sed -i "/FROM .*/a LABEL base_image_build_date=\"$(date +'%Y-%m-%d %H:%M:%S')\"" Dockerfile
            if [ -f "CHANGELOG.md" ] ; then
              sed -i "/FROM .*/a LABEL base_git_changelog_version=\"$(head -n1 ./CHANGELOG.md | awk '{print $2}')\"" Dockerfile
            fi

            if [[ $GITHUB_REF == refs/tags/* ]]; then
              sed -i "/FROM .*/a LABEL base_git_tag=\"${GITHUB_REF#refs/tags/v}\"" Dockerfile
            fi

            if [[ $GITHUB_REF == refs/heads/* ]]; then
              sed -i "/FROM .*/a LABEL base_git_branch=\"${GITHUB_REF#refs/heads/}\"" Dockerfile
            fi
          fi

      - name: Switch
        id: Switch
        run: |
          sed -i "s|FROM alpine:.*|FROM alpine:${RELEASE}|g" Dockerfile

      - name: Build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ steps.prep.outputs.tags }}
  alpine_3_5:
    env:
      RELEASE: "3.5"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: "3.5"
      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=${GITHUB_REPOSITORY/docker-/}
          if [[ $GITHUB_REF == refs/heads/* ]]; then
            BRANCH=${GITHUB_REF#refs/heads/}

            case ${BRANCH} in
              main | master | *-master )
                  if [ -n "${{ secrets.LATEST }}" ] ; then
                    if [ ${GITHUB_REF#refs/heads/} = "${{ secrets.LATEST }}" ]; then
                      BRANCHTAG="${DOCKER_IMAGE}:${RELEASE},${DOCKER_IMAGE}:${RELEASE}-latest,${DOCKER_IMAGE}:latest"
                    else
                      BRANCHTAG="${DOCKER_IMAGE}:${RELEASE},${DOCKER_IMAGE}:${RELEASE-latest}"
                    fi
                  else
                     BRANCHTAG="${DOCKER_IMAGE}:${RELEASE},${DOCKER_IMAGE}:${RELEASE}-latest"
                  fi
                ;;
              develop | *-develop )
                  BRANCHTAG="${DOCKER_IMAGE}:develop"
                ;;
              * )
                  if [ -n "${{ secrets.LATEST }}" ] ; then
                    if [ "${BRANCHTAG}" = "${{ secrets.LATEST }}" ]; then
                      BRANCHTAG="${DOCKER_IMAGE}:${BRANCH},${DOCKER_IMAGE}:${BRANCH}-latest,${DOCKER_IMAGE}:latest"
                    else
                      BRANCHTAG="${DOCKER_IMAGE}:${BRANCH},${DOCKER_IMAGE}:${BRANCH}-latest"
                    fi
                  else
                    BRANCHTAG="${DOCKER_IMAGE}:${BRANCH},${DOCKER_IMAGE}:${BRANCH}-latest"
                  fi
                ;;
            esac
          fi

          if [[ $GITHUB_REF == refs/tags/* ]]; then
            GITTAG="${DOCKER_IMAGE}:$(echo $GITHUB_REF | sed 's|refs/tags/||g')_${RELEASE}"
          fi

          if [ -n "${BRANCHTAG}" ] && [ -n "${GITTAG}" ]; then
            TAGS=${BRANCHTAG},${GITTAG}
          else
            TAGS="${BRANCHTAG}${GITTAG}"
          fi

          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=docker_image::${DOCKER_IMAGE}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Label
        id: Label
        run: |
          if [ -f "Dockerfile" ] ; then
            sed -i "/FROM .*/a LABEL base_git_repository=\"https://github.com/${GITHUB_REPOSITORY}\"" Dockerfile
            sed -i "/FROM .*/a LABEL base_git_commit=\"${GITHUB_SHA}\"" Dockerfile
            sed -i "/FROM .*/a LABEL base_git_committed_by=\"${GITHUB_ACTOR}\"" Dockerfile
            sed -i "/FROM .*/a LABEL base_image_build_date=\"$(date +'%Y-%m-%d %H:%M:%S')\"" Dockerfile
            if [ -f "CHANGELOG.md" ] ; then
              sed -i "/FROM .*/a LABEL base_git_changelog_version=\"$(head -n1 ./CHANGELOG.md | awk '{print $2}')\"" Dockerfile
            fi

            if [[ $GITHUB_REF == refs/tags/* ]]; then
              sed -i "/FROM .*/a LABEL base_git_tag=\"${GITHUB_REF#refs/tags/v}\"" Dockerfile
            fi

            if [[ $GITHUB_REF == refs/heads/* ]]; then
              sed -i "/FROM .*/a LABEL base_git_branch=\"${GITHUB_REF#refs/heads/}\"" Dockerfile
            fi
          fi

      - name: Switch
        id: Switch
        run: |
          sed -i "s|FROM alpine:.*|FROM alpine:${RELEASE}|g" Dockerfile

      - name: Build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ steps.prep.outputs.tags }}
  alpine_3_6:
    env:
      RELEASE: "3.6"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: "3.6"
      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=${GITHUB_REPOSITORY/docker-/}
          if [[ $GITHUB_REF == refs/heads/* ]]; then
            BRANCH=${GITHUB_REF#refs/heads/}

            case ${BRANCH} in
              main | master | *-master )
                  if [ -n "${{ secrets.LATEST }}" ] ; then
                    if [ ${GITHUB_REF#refs/heads/} = "${{ secrets.LATEST }}" ]; then
                      BRANCHTAG="${DOCKER_IMAGE}:${RELEASE},${DOCKER_IMAGE}:${RELEASE}-latest,${DOCKER_IMAGE}:latest"
                    else
                      BRANCHTAG="${DOCKER_IMAGE}:${RELEASE},${DOCKER_IMAGE}:${RELEASE-latest}"
                    fi
                  else
                     BRANCHTAG="${DOCKER_IMAGE}:${RELEASE},${DOCKER_IMAGE}:${RELEASE}-latest"
                  fi
                ;;
              develop | *-develop )
                  BRANCHTAG="${DOCKER_IMAGE}:develop"
                ;;
              * )
                  if [ -n "${{ secrets.LATEST }}" ] ; then
                    if [ "${BRANCHTAG}" = "${{ secrets.LATEST }}" ]; then
                      BRANCHTAG="${DOCKER_IMAGE}:${BRANCH},${DOCKER_IMAGE}:${BRANCH}-latest,${DOCKER_IMAGE}:latest"
                    else
                      BRANCHTAG="${DOCKER_IMAGE}:${BRANCH},${DOCKER_IMAGE}:${BRANCH}-latest"
                    fi
                  else
                    BRANCHTAG="${DOCKER_IMAGE}:${BRANCH},${DOCKER_IMAGE}:${BRANCH}-latest"
                  fi
                ;;
            esac
          fi

          if [[ $GITHUB_REF == refs/tags/* ]]; then
            GITTAG="${DOCKER_IMAGE}:$(echo $GITHUB_REF | sed 's|refs/tags/||g')_${RELEASE}"
          fi

          if [ -n "${BRANCHTAG}" ] && [ -n "${GITTAG}" ]; then
            TAGS=${BRANCHTAG},${GITTAG}
          else
            TAGS="${BRANCHTAG}${GITTAG}"
          fi

          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=docker_image::${DOCKER_IMAGE}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Label
        id: Label
        run: |
          if [ -f "Dockerfile" ] ; then
            sed -i "/FROM .*/a LABEL base_git_repository=\"https://github.com/${GITHUB_REPOSITORY}\"" Dockerfile
            sed -i "/FROM .*/a LABEL base_git_commit=\"${GITHUB_SHA}\"" Dockerfile
            sed -i "/FROM .*/a LABEL base_git_committed_by=\"${GITHUB_ACTOR}\"" Dockerfile
            sed -i "/FROM .*/a LABEL base_image_build_date=\"$(date +'%Y-%m-%d %H:%M:%S')\"" Dockerfile
            if [ -f "CHANGELOG.md" ] ; then
              sed -i "/FROM .*/a LABEL base_git_changelog_version=\"$(head -n1 ./CHANGELOG.md | awk '{print $2}')\"" Dockerfile
            fi

            if [[ $GITHUB_REF == refs/tags/* ]]; then
              sed -i "/FROM .*/a LABEL base_git_tag=\"${GITHUB_REF#refs/tags/v}\"" Dockerfile
            fi

            if [[ $GITHUB_REF == refs/heads/* ]]; then
              sed -i "/FROM .*/a LABEL base_git_branch=\"${GITHUB_REF#refs/heads/}\"" Dockerfile
            fi
          fi

      - name: Switch
        id: Switch
        run: |
          sed -i "s|FROM alpine:.*|FROM alpine:${RELEASE}|g" Dockerfile

      - name: Build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm64/v8,linux/ppc64le
          push: true
          tags: ${{ steps.prep.outputs.tags }}
  alpine_3_7:
    env:
      RELEASE: "3.7"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: "3.7"
      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=${GITHUB_REPOSITORY/docker-/}
          if [[ $GITHUB_REF == refs/heads/* ]]; then
            BRANCH=${GITHUB_REF#refs/heads/}

            case ${BRANCH} in
              main | master | *-master )
                  if [ -n "${{ secrets.LATEST }}" ] ; then
                    if [ ${GITHUB_REF#refs/heads/} = "${{ secrets.LATEST }}" ]; then
                      BRANCHTAG="${DOCKER_IMAGE}:${RELEASE},${DOCKER_IMAGE}:${RELEASE}-latest,${DOCKER_IMAGE}:latest"
                    else
                      BRANCHTAG="${DOCKER_IMAGE}:${RELEASE},${DOCKER_IMAGE}:${RELEASE-latest}"
                    fi
                  else
                     BRANCHTAG="${DOCKER_IMAGE}:${RELEASE},${DOCKER_IMAGE}:${RELEASE}-latest"
                  fi
                ;;
              develop | *-develop )
                  BRANCHTAG="${DOCKER_IMAGE}:develop"
                ;;
              * )
                  if [ -n "${{ secrets.LATEST }}" ] ; then
                    if [ "${BRANCHTAG}" = "${{ secrets.LATEST }}" ]; then
                      BRANCHTAG="${DOCKER_IMAGE}:${BRANCH},${DOCKER_IMAGE}:${BRANCH}-latest,${DOCKER_IMAGE}:latest"
                    else
                      BRANCHTAG="${DOCKER_IMAGE}:${BRANCH},${DOCKER_IMAGE}:${BRANCH}-latest"
                    fi
                  else
                    BRANCHTAG="${DOCKER_IMAGE}:${BRANCH},${DOCKER_IMAGE}:${BRANCH}-latest"
                  fi
                ;;
            esac
          fi

          if [[ $GITHUB_REF == refs/tags/* ]]; then
            GITTAG="${DOCKER_IMAGE}:$(echo $GITHUB_REF | sed 's|refs/tags/||g')_${RELEASE}"
          fi

          if [ -n "${BRANCHTAG}" ] && [ -n "${GITTAG}" ]; then
            TAGS=${BRANCHTAG},${GITTAG}
          else
            TAGS="${BRANCHTAG}${GITTAG}"
          fi

          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=docker_image::${DOCKER_IMAGE}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Label
        id: Label
        run: |
          if [ -f "Dockerfile" ] ; then
            sed -i "/FROM .*/a LABEL base_git_repository=\"https://github.com/${GITHUB_REPOSITORY}\"" Dockerfile
            sed -i "/FROM .*/a LABEL base_git_commit=\"${GITHUB_SHA}\"" Dockerfile
            sed -i "/FROM .*/a LABEL base_git_committed_by=\"${GITHUB_ACTOR}\"" Dockerfile
            sed -i "/FROM .*/a LABEL base_image_build_date=\"$(date +'%Y-%m-%d %H:%M:%S')\"" Dockerfile
            if [ -f "CHANGELOG.md" ] ; then
              sed -i "/FROM .*/a LABEL base_git_changelog_version=\"$(head -n1 ./CHANGELOG.md | awk '{print $2}')\"" Dockerfile
            fi

            if [[ $GITHUB_REF == refs/tags/* ]]; then
              sed -i "/FROM .*/a LABEL base_git_tag=\"${GITHUB_REF#refs/tags/v}\"" Dockerfile
            fi

            if [[ $GITHUB_REF == refs/heads/* ]]; then
              sed -i "/FROM .*/a LABEL base_git_branch=\"${GITHUB_REF#refs/heads/}\"" Dockerfile
            fi
          fi

      - name: Switch
        id: Switch
        run: |
          sed -i "s|FROM alpine:.*|FROM alpine:${RELEASE}|g" Dockerfile

      - name: Build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm64/v8,linux/ppc64le
          push: true
          tags: ${{ steps.prep.outputs.tags }}
  alpine_3_8:
    env:
      RELEASE: "3.8"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: "3.8"
      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=${GITHUB_REPOSITORY/docker-/}
          if [[ $GITHUB_REF == refs/heads/* ]]; then
            BRANCH=${GITHUB_REF#refs/heads/}

            case ${BRANCH} in
              main | master | *-master )
                  if [ -n "${{ secrets.LATEST }}" ] ; then
                    if [ ${GITHUB_REF#refs/heads/} = "${{ secrets.LATEST }}" ]; then
                      BRANCHTAG="${DOCKER_IMAGE}:${RELEASE},${DOCKER_IMAGE}:${RELEASE}-latest,${DOCKER_IMAGE}:latest"
                    else
                      BRANCHTAG="${DOCKER_IMAGE}:${RELEASE},${DOCKER_IMAGE}:${RELEASE-latest}"
                    fi
                  else
                     BRANCHTAG="${DOCKER_IMAGE}:${RELEASE},${DOCKER_IMAGE}:${RELEASE}-latest"
                  fi
                ;;
              develop | *-develop )
                  BRANCHTAG="${DOCKER_IMAGE}:develop"
                ;;
              * )
                  if [ -n "${{ secrets.LATEST }}" ] ; then
                    if [ "${BRANCHTAG}" = "${{ secrets.LATEST }}" ]; then
                      BRANCHTAG="${DOCKER_IMAGE}:${BRANCH},${DOCKER_IMAGE}:${BRANCH}-latest,${DOCKER_IMAGE}:latest"
                    else
                      BRANCHTAG="${DOCKER_IMAGE}:${BRANCH},${DOCKER_IMAGE}:${BRANCH}-latest"
                    fi
                  else
                    BRANCHTAG="${DOCKER_IMAGE}:${BRANCH},${DOCKER_IMAGE}:${BRANCH}-latest"
                  fi
                ;;
            esac
          fi

          if [[ $GITHUB_REF == refs/tags/* ]]; then
            GITTAG="${DOCKER_IMAGE}:$(echo $GITHUB_REF | sed 's|refs/tags/||g')_${RELEASE}"
          fi

          if [ -n "${BRANCHTAG}" ] && [ -n "${GITTAG}" ]; then
            TAGS=${BRANCHTAG},${GITTAG}
          else
            TAGS="${BRANCHTAG}${GITTAG}"
          fi

          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=docker_image::${DOCKER_IMAGE}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Label
        id: Label
        run: |
          if [ -f "Dockerfile" ] ; then
            sed -i "/FROM .*/a LABEL base_git_repository=\"https://github.com/${GITHUB_REPOSITORY}\"" Dockerfile
            sed -i "/FROM .*/a LABEL base_git_commit=\"${GITHUB_SHA}\"" Dockerfile
            sed -i "/FROM .*/a LABEL base_git_committed_by=\"${GITHUB_ACTOR}\"" Dockerfile
            sed -i "/FROM .*/a LABEL base_image_build_date=\"$(date +'%Y-%m-%d %H:%M:%S')\"" Dockerfile
            if [ -f "CHANGELOG.md" ] ; then
              sed -i "/FROM .*/a LABEL base_git_changelog_version=\"$(head -n1 ./CHANGELOG.md | awk '{print $2}')\"" Dockerfile
            fi

            if [[ $GITHUB_REF == refs/tags/* ]]; then
              sed -i "/FROM .*/a LABEL base_git_tag=\"${GITHUB_REF#refs/tags/v}\"" Dockerfile
            fi

            if [[ $GITHUB_REF == refs/heads/* ]]; then
              sed -i "/FROM .*/a LABEL base_git_branch=\"${GITHUB_REF#refs/heads/}\"" Dockerfile
            fi
          fi

      - name: Switch
        id: Switch
        run: |
          sed -i "s|FROM alpine:.*|FROM alpine:${RELEASE}|g" Dockerfile

      - name: Build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm64/v8,linux/ppc64le
          push: true
          tags: ${{ steps.prep.outputs.tags }}
  alpine_3_9:
    env:
      RELEASE: "3.9"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: "3.9"
      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=${GITHUB_REPOSITORY/docker-/}
          if [[ $GITHUB_REF == refs/heads/* ]]; then
            BRANCH=${GITHUB_REF#refs/heads/}

            case ${BRANCH} in
              main | master | *-master )
                  if [ -n "${{ secrets.LATEST }}" ] ; then
                    if [ ${GITHUB_REF#refs/heads/} = "${{ secrets.LATEST }}" ]; then
                      BRANCHTAG="${DOCKER_IMAGE}:${RELEASE},${DOCKER_IMAGE}:${RELEASE}-latest,${DOCKER_IMAGE}:latest"
                    else
                      BRANCHTAG="${DOCKER_IMAGE}:${RELEASE},${DOCKER_IMAGE}:${RELEASE-latest}"
                    fi
                  else
                     BRANCHTAG="${DOCKER_IMAGE}:${RELEASE},${DOCKER_IMAGE}:${RELEASE}-latest"
                  fi
                ;;
              develop | *-develop )
                  BRANCHTAG="${DOCKER_IMAGE}:develop"
                ;;
              * )
                  if [ -n "${{ secrets.LATEST }}" ] ; then
                    if [ "${BRANCHTAG}" = "${{ secrets.LATEST }}" ]; then
                      BRANCHTAG="${DOCKER_IMAGE}:${BRANCH},${DOCKER_IMAGE}:${BRANCH}-latest,${DOCKER_IMAGE}:latest"
                    else
                      BRANCHTAG="${DOCKER_IMAGE}:${BRANCH},${DOCKER_IMAGE}:${BRANCH}-latest"
                    fi
                  else
                    BRANCHTAG="${DOCKER_IMAGE}:${BRANCH},${DOCKER_IMAGE}:${BRANCH}-latest"
                  fi
                ;;
            esac
          fi

          if [[ $GITHUB_REF == refs/tags/* ]]; then
            GITTAG="${DOCKER_IMAGE}:$(echo $GITHUB_REF | sed 's|refs/tags/||g')_${RELEASE}"
          fi

          if [ -n "${BRANCHTAG}" ] && [ -n "${GITTAG}" ]; then
            TAGS=${BRANCHTAG},${GITTAG}
          else
            TAGS="${BRANCHTAG}${GITTAG}"
          fi

          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=docker_image::${DOCKER_IMAGE}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Label
        id: Label
        run: |
          if [ -f "Dockerfile" ] ; then
            sed -i "/FROM .*/a LABEL base_git_repository=\"https://github.com/${GITHUB_REPOSITORY}\"" Dockerfile
            sed -i "/FROM .*/a LABEL base_git_commit=\"${GITHUB_SHA}\"" Dockerfile
            sed -i "/FROM .*/a LABEL base_git_committed_by=\"${GITHUB_ACTOR}\"" Dockerfile
            sed -i "/FROM .*/a LABEL base_image_build_date=\"$(date +'%Y-%m-%d %H:%M:%S')\"" Dockerfile
            if [ -f "CHANGELOG.md" ] ; then
              sed -i "/FROM .*/a LABEL base_git_changelog_version=\"$(head -n1 ./CHANGELOG.md | awk '{print $2}')\"" Dockerfile
            fi

            if [[ $GITHUB_REF == refs/tags/* ]]; then
              sed -i "/FROM .*/a LABEL base_git_tag=\"${GITHUB_REF#refs/tags/v}\"" Dockerfile
            fi

            if [[ $GITHUB_REF == refs/heads/* ]]; then
              sed -i "/FROM .*/a LABEL base_git_branch=\"${GITHUB_REF#refs/heads/}\"" Dockerfile
            fi
          fi

      - name: Switch
        id: Switch
        run: |
          sed -i "s|FROM alpine:.*|FROM alpine:${RELEASE}|g" Dockerfile

      - name: Build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm64/v8,linux/ppc64le
          push: true
          tags: ${{ steps.prep.outputs.tags }}
  alpine_3_10:
    env:
      RELEASE: "3.10"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: "3.10"
      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=${GITHUB_REPOSITORY/docker-/}
          if [[ $GITHUB_REF == refs/heads/* ]]; then
            BRANCH=${GITHUB_REF#refs/heads/}

            case ${BRANCH} in
              main | master | *-master )
                  if [ -n "${{ secrets.LATEST }}" ] ; then
                    if [ ${GITHUB_REF#refs/heads/} = "${{ secrets.LATEST }}" ]; then
                      BRANCHTAG="${DOCKER_IMAGE}:${RELEASE},${DOCKER_IMAGE}:${RELEASE}-latest,${DOCKER_IMAGE}:latest"
                    else
                      BRANCHTAG="${DOCKER_IMAGE}:${RELEASE},${DOCKER_IMAGE}:${RELEASE-latest}"
                    fi
                  else
                     BRANCHTAG="${DOCKER_IMAGE}:${RELEASE},${DOCKER_IMAGE}:${RELEASE}-latest"
                  fi
                ;;
              develop | *-develop )
                  BRANCHTAG="${DOCKER_IMAGE}:develop"
                ;;
              * )
                  if [ -n "${{ secrets.LATEST }}" ] ; then
                    if [ "${BRANCHTAG}" = "${{ secrets.LATEST }}" ]; then
                      BRANCHTAG="${DOCKER_IMAGE}:${BRANCH},${DOCKER_IMAGE}:${BRANCH}-latest,${DOCKER_IMAGE}:latest"
                    else
                      BRANCHTAG="${DOCKER_IMAGE}:${BRANCH},${DOCKER_IMAGE}:${BRANCH}-latest"
                    fi
                  else
                    BRANCHTAG="${DOCKER_IMAGE}:${BRANCH},${DOCKER_IMAGE}:${BRANCH}-latest"
                  fi
                ;;
            esac
          fi

          if [[ $GITHUB_REF == refs/tags/* ]]; then
            GITTAG="${DOCKER_IMAGE}:$(echo $GITHUB_REF | sed 's|refs/tags/||g')_${RELEASE}"
          fi

          if [ -n "${BRANCHTAG}" ] && [ -n "${GITTAG}" ]; then
            TAGS=${BRANCHTAG},${GITTAG}
          else
            TAGS="${BRANCHTAG}${GITTAG}"
          fi

          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=docker_image::${DOCKER_IMAGE}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Label
        id: Label
        run: |
          if [ -f "Dockerfile" ] ; then
            sed -i "/FROM .*/a LABEL base_git_repository=\"https://github.com/${GITHUB_REPOSITORY}\"" Dockerfile
            sed -i "/FROM .*/a LABEL base_git_commit=\"${GITHUB_SHA}\"" Dockerfile
            sed -i "/FROM .*/a LABEL base_git_committed_by=\"${GITHUB_ACTOR}\"" Dockerfile
            sed -i "/FROM .*/a LABEL base_image_build_date=\"$(date +'%Y-%m-%d %H:%M:%S')\"" Dockerfile
            if [ -f "CHANGELOG.md" ] ; then
              sed -i "/FROM .*/a LABEL base_git_changelog_version=\"$(head -n1 ./CHANGELOG.md | awk '{print $2}')\"" Dockerfile
            fi

            if [[ $GITHUB_REF == refs/tags/* ]]; then
              sed -i "/FROM .*/a LABEL base_git_tag=\"${GITHUB_REF#refs/tags/v}\"" Dockerfile
            fi

            if [[ $GITHUB_REF == refs/heads/* ]]; then
              sed -i "/FROM .*/a LABEL base_git_branch=\"${GITHUB_REF#refs/heads/}\"" Dockerfile
            fi
          fi

      - name: Switch
        id: Switch
        run: |
          sed -i "s|FROM alpine:.*|FROM alpine:${RELEASE}|g" Dockerfile

      - name: Build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm64/v8,linux/ppc64le
          push: true
          tags: ${{ steps.prep.outputs.tags }}
  alpine_3_11:
    env:
      RELEASE: "3.11"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: "3.11"
      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=${GITHUB_REPOSITORY/docker-/}
          if [[ $GITHUB_REF == refs/heads/* ]]; then
            BRANCH=${GITHUB_REF#refs/heads/}

            case ${BRANCH} in
              main | master | *-master )
                  if [ -n "${{ secrets.LATEST }}" ] ; then
                    if [ ${GITHUB_REF#refs/heads/} = "${{ secrets.LATEST }}" ]; then
                      BRANCHTAG="${DOCKER_IMAGE}:${RELEASE},${DOCKER_IMAGE}:${RELEASE}-latest,${DOCKER_IMAGE}:latest"
                    else
                      BRANCHTAG="${DOCKER_IMAGE}:${RELEASE},${DOCKER_IMAGE}:${RELEASE-latest}"
                    fi
                  else
                     BRANCHTAG="${DOCKER_IMAGE}:${RELEASE},${DOCKER_IMAGE}:${RELEASE}-latest"
                  fi
                ;;
              develop | *-develop )
                  BRANCHTAG="${DOCKER_IMAGE}:develop"
                ;;
              * )
                  if [ -n "${{ secrets.LATEST }}" ] ; then
                    if [ "${BRANCHTAG}" = "${{ secrets.LATEST }}" ]; then
                      BRANCHTAG="${DOCKER_IMAGE}:${BRANCH},${DOCKER_IMAGE}:${BRANCH}-latest,${DOCKER_IMAGE}:latest"
                    else
                      BRANCHTAG="${DOCKER_IMAGE}:${BRANCH},${DOCKER_IMAGE}:${BRANCH}-latest"
                    fi
                  else
                    BRANCHTAG="${DOCKER_IMAGE}:${BRANCH},${DOCKER_IMAGE}:${BRANCH}-latest"
                  fi
                ;;
            esac
          fi

          if [[ $GITHUB_REF == refs/tags/* ]]; then
            GITTAG="${DOCKER_IMAGE}:$(echo $GITHUB_REF | sed 's|refs/tags/||g')_${RELEASE}"
          fi

          if [ -n "${BRANCHTAG}" ] && [ -n "${GITTAG}" ]; then
            TAGS=${BRANCHTAG},${GITTAG}
          else
            TAGS="${BRANCHTAG}${GITTAG}"
          fi

          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=docker_image::${DOCKER_IMAGE}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Label
        id: Label
        run: |
          if [ -f "Dockerfile" ] ; then
            sed -i "/FROM .*/a LABEL base_git_repository=\"https://github.com/${GITHUB_REPOSITORY}\"" Dockerfile
            sed -i "/FROM .*/a LABEL base_git_commit=\"${GITHUB_SHA}\"" Dockerfile
            sed -i "/FROM .*/a LABEL base_git_committed_by=\"${GITHUB_ACTOR}\"" Dockerfile
            sed -i "/FROM .*/a LABEL base_image_build_date=\"$(date +'%Y-%m-%d %H:%M:%S')\"" Dockerfile
            if [ -f "CHANGELOG.md" ] ; then
              sed -i "/FROM .*/a LABEL base_git_changelog_version=\"$(head -n1 ./CHANGELOG.md | awk '{print $2}')\"" Dockerfile
            fi

            if [[ $GITHUB_REF == refs/tags/* ]]; then
              sed -i "/FROM .*/a LABEL base_git_tag=\"${GITHUB_REF#refs/tags/v}\"" Dockerfile
            fi

            if [[ $GITHUB_REF == refs/heads/* ]]; then
              sed -i "/FROM .*/a LABEL base_git_branch=\"${GITHUB_REF#refs/heads/}\"" Dockerfile
            fi
          fi

      - name: Switch
        id: Switch
        run: |
          sed -i "s|FROM alpine:.*|FROM alpine:${RELEASE}|g" Dockerfile

      - name: Build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm64/v8,linux/ppc64le
          push: true
          tags: ${{ steps.prep.outputs.tags }}
  alpine_3_12:
    env:
      RELEASE: "3.12"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: "3.12"
      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=${GITHUB_REPOSITORY/docker-/}
          if [[ $GITHUB_REF == refs/heads/* ]]; then
            BRANCH=${GITHUB_REF#refs/heads/}

            case ${BRANCH} in
              main | master | *-master )
                  if [ -n "${{ secrets.LATEST }}" ] ; then
                    if [ ${GITHUB_REF#refs/heads/} = "${{ secrets.LATEST }}" ]; then
                      BRANCHTAG="${DOCKER_IMAGE}:${RELEASE},${DOCKER_IMAGE}:${RELEASE}-latest,${DOCKER_IMAGE}:latest"
                    else
                      BRANCHTAG="${DOCKER_IMAGE}:${RELEASE},${DOCKER_IMAGE}:${RELEASE-latest}"
                    fi
                  else
                     BRANCHTAG="${DOCKER_IMAGE}:${RELEASE},${DOCKER_IMAGE}:${RELEASE}-latest"
                  fi
                ;;
              develop | *-develop )
                  BRANCHTAG="${DOCKER_IMAGE}:develop"
                ;;
              * )
                  if [ -n "${{ secrets.LATEST }}" ] ; then
                    if [ "${BRANCHTAG}" = "${{ secrets.LATEST }}" ]; then
                      BRANCHTAG="${DOCKER_IMAGE}:${BRANCH},${DOCKER_IMAGE}:${BRANCH}-latest,${DOCKER_IMAGE}:latest"
                    else
                      BRANCHTAG="${DOCKER_IMAGE}:${BRANCH},${DOCKER_IMAGE}:${BRANCH}-latest"
                    fi
                  else
                    BRANCHTAG="${DOCKER_IMAGE}:${BRANCH},${DOCKER_IMAGE}:${BRANCH}-latest"
                  fi
                ;;
            esac
          fi

          if [[ $GITHUB_REF == refs/tags/* ]]; then
            GITTAG="${DOCKER_IMAGE}:$(echo $GITHUB_REF | sed 's|refs/tags/||g')_${RELEASE}"
          fi

          if [ -n "${BRANCHTAG}" ] && [ -n "${GITTAG}" ]; then
            TAGS=${BRANCHTAG},${GITTAG}
          else
            TAGS="${BRANCHTAG}${GITTAG}"
          fi

          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=docker_image::${DOCKER_IMAGE}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Label
        id: Label
        run: |
          if [ -f "Dockerfile" ] ; then
            sed -i "/FROM .*/a LABEL base_git_repository=\"https://github.com/${GITHUB_REPOSITORY}\"" Dockerfile
            sed -i "/FROM .*/a LABEL base_git_commit=\"${GITHUB_SHA}\"" Dockerfile
            sed -i "/FROM .*/a LABEL base_git_committed_by=\"${GITHUB_ACTOR}\"" Dockerfile
            sed -i "/FROM .*/a LABEL base_image_build_date=\"$(date +'%Y-%m-%d %H:%M:%S')\"" Dockerfile
            if [ -f "CHANGELOG.md" ] ; then
              sed -i "/FROM .*/a LABEL base_git_changelog_version=\"$(head -n1 ./CHANGELOG.md | awk '{print $2}')\"" Dockerfile
            fi

            if [[ $GITHUB_REF == refs/tags/* ]]; then
              sed -i "/FROM .*/a LABEL base_git_tag=\"${GITHUB_REF#refs/tags/v}\"" Dockerfile
            fi

            if [[ $GITHUB_REF == refs/heads/* ]]; then
              sed -i "/FROM .*/a LABEL base_git_branch=\"${GITHUB_REF#refs/heads/}\"" Dockerfile
            fi
          fi

      - name: Switch
        id: Switch
        run: |
          sed -i "s|FROM alpine:.*|FROM alpine:${RELEASE}|g" Dockerfile

      - name: Build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm64/v8,linux/ppc64le
          push: true
          tags: ${{ steps.prep.outputs.tags }}
  alpine_edge:
    env:
      RELEASE: "edge"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: "edge"
      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=${GITHUB_REPOSITORY/docker-/}
          if [[ $GITHUB_REF == refs/heads/* ]]; then
            BRANCH=${GITHUB_REF#refs/heads/}

            case ${BRANCH} in
              main | master | *-master )
                  if [ -n "${{ secrets.LATEST }}" ] ; then
                    if [ ${GITHUB_REF#refs/heads/} = "${{ secrets.LATEST }}" ]; then
                      BRANCHTAG="${DOCKER_IMAGE}:${RELEASE},${DOCKER_IMAGE}:${RELEASE}-latest,${DOCKER_IMAGE}:latest"
                    else
                      BRANCHTAG="${DOCKER_IMAGE}:${RELEASE},${DOCKER_IMAGE}:${RELEASE-latest}"
                    fi
                  else
                     BRANCHTAG="${DOCKER_IMAGE}:${RELEASE},${DOCKER_IMAGE}:${RELEASE}-latest"
                  fi
                ;;
              develop | *-develop )
                  BRANCHTAG="${DOCKER_IMAGE}:develop"
                ;;
              * )
                  if [ -n "${{ secrets.LATEST }}" ] ; then
                    if [ "${BRANCHTAG}" = "${{ secrets.LATEST }}" ]; then
                      BRANCHTAG="${DOCKER_IMAGE}:${BRANCH},${DOCKER_IMAGE}:${BRANCH}-latest,${DOCKER_IMAGE}:latest"
                    else
                      BRANCHTAG="${DOCKER_IMAGE}:${BRANCH},${DOCKER_IMAGE}:${BRANCH}-latest"
                    fi
                  else
                    BRANCHTAG="${DOCKER_IMAGE}:${BRANCH},${DOCKER_IMAGE}:${BRANCH}-latest"
                  fi
                ;;
            esac
          fi

          if [[ $GITHUB_REF == refs/tags/* ]]; then
            GITTAG="${DOCKER_IMAGE}:$(echo $GITHUB_REF | sed 's|refs/tags/||g')_${RELEASE}"
          fi

          if [ -n "${BRANCHTAG}" ] && [ -n "${GITTAG}" ]; then
            TAGS=${BRANCHTAG},${GITTAG}
          else
            TAGS="${BRANCHTAG}${GITTAG}"
          fi

          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=docker_image::${DOCKER_IMAGE}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Label
        id: Label
        run: |
          if [ -f "Dockerfile" ] ; then
            sed -i "/FROM .*/a LABEL base_git_repository=\"https://github.com/${GITHUB_REPOSITORY}\"" Dockerfile
            sed -i "/FROM .*/a LABEL base_git_commit=\"${GITHUB_SHA}\"" Dockerfile
            sed -i "/FROM .*/a LABEL base_git_committed_by=\"${GITHUB_ACTOR}\"" Dockerfile
            sed -i "/FROM .*/a LABEL base_image_build_date=\"$(date +'%Y-%m-%d %H:%M:%S')\"" Dockerfile
            if [ -f "CHANGELOG.md" ] ; then
              sed -i "/FROM .*/a LABEL base_git_changelog_version=\"$(head -n1 ./CHANGELOG.md | awk '{print $2}')\"" Dockerfile
            fi

            if [[ $GITHUB_REF == refs/tags/* ]]; then
              sed -i "/FROM .*/a LABEL base_git_tag=\"${GITHUB_REF#refs/tags/v}\"" Dockerfile
            fi

            if [[ $GITHUB_REF == refs/heads/* ]]; then
              sed -i "/FROM .*/a LABEL base_git_branch=\"${GITHUB_REF#refs/heads/}\"" Dockerfile
            fi
          fi

      - name: Switch
        id: Switch
        run: |
          sed -i "s|FROM alpine:.*|FROM alpine:${RELEASE}|g" Dockerfile

      - name: Build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm64/v8,linux/ppc64le
          push: true
          tags: ${{ steps.prep.outputs.tags }}